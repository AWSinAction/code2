---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS in Action: chapter 5 (OpenSwan acting as VPN IPSec endpoint)'
Parameters:
  KeyName:
    Description: 'Key pair name for SSH access'
    Type: 'AWS::EC2::KeyPair::KeyName'
  VPC:
    Description: 'Just select the one and only default VPC.'
    Type: 'AWS::EC2::VPC::Id'
  Subnet:
    Description: 'Just select one of the available subnets.'
    Type: 'AWS::EC2::Subnet::Id'
  IPSecSharedSecret:
    Description: 'The shared secret key for IPSec.'
    Type: String
  VPNUser:
    Description: 'The VPN user.'
    Type: String
  VPNPassword:
    Description: 'The VPN password.'
    Type: String
Mappings:
  RegionMap:
    'ap-south-1':
      AMI: 'ami-d7abd1b8'
    'eu-west-2':
      AMI: 'ami-489f8e2c'
    'eu-west-1':
      AMI: 'ami-ebd02392'
    'ap-northeast-2':
      AMI: 'ami-8663bae8'
    'ap-northeast-1':
      AMI: 'ami-4af5022c'
    'sa-east-1':
      AMI: 'ami-d27203be'
    'ca-central-1':
      AMI: 'ami-5ac17f3e'
    'ap-southeast-1':
      AMI: 'ami-fdb8229e'
    'ap-southeast-2':
      AMI: 'ami-30041c53'
    'eu-central-1':
      AMI: 'ami-657bd20a'
    'us-east-1':
      AMI: 'ami-4fffc834'
    'us-east-2':
      AMI: 'ami-ea87a78f'
    'us-west-1':
      AMI: 'ami-3a674d5a'
    'us-west-2':
      AMI: 'ami-aa5ebdd2'
Resources:
  EC2Instance:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: 't2.micro'
      SecurityGroupIds:
      - !Ref InstanceSecurityGroup
      KeyName: !Ref KeyName
      ImageId: !FindInMap [RegionMap, !Ref 'AWS::Region', AMI]
      SubnetId: !Ref Subnet
      UserData:
        'Fn::Base64': !Sub |
          #!/bin/bash -ex
          export IPSEC_PSK=${IPSecSharedSecret}
          export VPN_USER=${VPNUser}
          export VPN_PASSWORD=${VPNPassword}
          curl -s https://raw.githubusercontent.com/AWSinAction/code2/master/chapter05/vpn-setup.sh | bash -ex
          /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource EC2Instance --region ${AWS::Region}
    CreationPolicy:
      ResourceSignal:
        Timeout: PT10M
  InstanceSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'Enable access to VPN server'
      VpcId: !Ref VPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: '0.0.0.0/0'
      - IpProtocol: udp
        FromPort: 500
        ToPort: 500
        CidrIp: '0.0.0.0/0'
      - IpProtocol: udp
        FromPort: 1701
        ToPort: 1701
        CidrIp: '0.0.0.0/0'
      - IpProtocol: udp
        FromPort: 4500
        ToPort: 4500
        CidrIp: '0.0.0.0/0'
Outputs:
  ServerIP:
    Description: 'Public IP address of the vpn server'
    Value: !GetAtt 'EC2Instance.PublicIp'
  IPSecSharedSecret:
    Description: 'The shared key for the VPN connection (IPSec)'
    Value: !Ref IPSecSharedSecret
  VPNUser:
    Description: 'The username for the vpn connection'
    Value: !Ref VPNUser
  VPNPassword:
    Description: 'The password for the vpn connection'
    Value: !Ref VPNPassword
