---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS in Action: chapter 14 (Jenkins running in Auto Scaling Group over multiple AZs)'
Parameters:
  KeyName:
    Description: 'Key Pair name'
    Type: 'AWS::EC2::KeyPair::KeyName'
    Default: mykey
  JenkinsAdminPassword:
    Description: 'Password for Jenkins admin user'
    Type: String
    AllowedPattern: '[a-zA-Z0-9]*'
    MinLength: 8
    MaxLength: 42
Mappings:
  RegionMap:
    'ap-south-1':
      AMI: 'ami-d7abd1b8'
    'eu-west-2':
      AMI: 'ami-489f8e2c'
    'eu-west-1':
      AMI: 'ami-ebd02392'
    'ap-northeast-2':
      AMI: 'ami-8663bae8'
    'ap-northeast-1':
      AMI: 'ami-4af5022c'
    'sa-east-1':
      AMI: 'ami-d27203be'
    'ca-central-1':
      AMI: 'ami-5ac17f3e'
    'ap-southeast-1':
      AMI: 'ami-fdb8229e'
    'ap-southeast-2':
      AMI: 'ami-30041c53'
    'eu-central-1':
      AMI: 'ami-657bd20a'
    'us-east-1':
      AMI: 'ami-4fffc834'
    'us-east-2':
      AMI: 'ami-ea87a78f'
    'us-west-1':
      AMI: 'ami-3a674d5a'
    'us-west-2':
      AMI: 'ami-aa5ebdd2'
Resources:
  ##########################################################################
  #                                                                        #
  #                       VPC with two public subnets                      #
  #                                                                        #
  ##########################################################################
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: '172.31.0.0/16'
      EnableDnsHostnames: true
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties: {}
  VPCGatewayAttachment:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  SubnetA:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: '172.31.38.0/24'
      VpcId: !Ref VPC
  SubnetB:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select [1, !GetAZs '']
      CidrBlock: '172.31.37.0/24'
      VpcId: !Ref VPC
  RouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
  RouteTableAssociationA:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref SubnetA
      RouteTableId: !Ref RouteTable
  RouteTableAssociationB:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref SubnetB
      RouteTableId: !Ref RouteTable
  RoutePublicNATToInternet:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref InternetGateway
    DependsOn: VPCGatewayAttachment
  NetworkAcl:
    Type: 'AWS::EC2::NetworkAcl'
    Properties:
      VpcId: !Ref VPC
  SubnetNetworkAclAssociationA:
    Type: 'AWS::EC2::SubnetNetworkAclAssociation'
    Properties:
      SubnetId: !Ref SubnetA
      NetworkAclId: !Ref NetworkAcl
  SubnetNetworkAclAssociationB:
    Type: 'AWS::EC2::SubnetNetworkAclAssociation'
    Properties:
      SubnetId: !Ref SubnetB
      NetworkAclId: !Ref NetworkAcl
  NetworkAclEntryIngress:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      NetworkAclId: !Ref NetworkAcl
      RuleNumber: 100
      Protocol: -1
      RuleAction: allow
      Egress: false
      CidrBlock: '0.0.0.0/0'
  NetworkAclEntryEgress:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      NetworkAclId: !Ref NetworkAcl
      RuleNumber: 100
      Protocol: -1
      RuleAction: allow
      Egress: true
      CidrBlock: '0.0.0.0/0'
  ##########################################################################
  #                                                                        #
  #                   Auto Scaling Group running Jenkins                   #
  #                                                                        #
  ##########################################################################
  SecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'SecurityGroupforjenkins'
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: 'jenkins-multiaz'
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: '0.0.0.0/0'
      - IpProtocol: tcp
        FromPort: 8080
        ToPort: 8080
        CidrIp: '0.0.0.0/0'
      - IpProtocol: icmp
        FromPort: -1
        ToPort: -1
        CidrIp: '0.0.0.0/0'
  LaunchConfiguration:
    Type: 'AWS::AutoScaling::LaunchConfiguration'
    Properties:
      InstanceMonitoring: false
      ImageId: !FindInMap [RegionMap, !Ref 'AWS::Region', AMI]
      KeyName: !Ref KeyName
      SecurityGroups:
      - !Ref SecurityGroup
      AssociatePublicIpAddress: true
      InstanceType: 't2.micro'
      UserData:
        'Fn::Base64': !Sub |
          #!/bin/bash -x
          bash -ex << "TRY"
            # install Jenkins
            wget -q -T 60 https://pkg.jenkins.io/redhat/jenkins-1.616-1.1.noarch.rpm
            rpm --install jenkins-1.616-1.1.noarch.rpm

            # configure Jenkins
            sed -i -e 's/JENKINS_ARGS=""/JENKINS_ARGS="--argumentsRealm.passwd.admin=${JenkinsAdminPassword} --argumentsRealm.roles.admin=admin"/g' /etc/sysconfig/jenkins
            echo '<?xml version="1.0" encoding="UTF-8"?><hudson><version>1.0</version><useSecurity>true</useSecurity><authorizationStrategy class="hudson.security.FullControlOnceLoggedInAuthorizationStrategy"/><securityRealm class="hudson.security.LegacySecurityRealm"/></hudson>' > /var/lib/jenkins/config.xml

            # start jenkins
            service jenkins start
          TRY
          /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource AutoScalingGroup --region ${AWS::Region}
  AutoScalingGroup:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      LaunchConfigurationName: !Ref LaunchConfiguration
      Tags:
      - Key: Name
        Value: 'jenkins-multiaz'
        PropagateAtLaunch: true
      DesiredCapacity: 1
      MinSize: 1
      MaxSize: 1
      VPCZoneIdentifier:
      - !Ref SubnetA
      - !Ref SubnetB
      HealthCheckGracePeriod: 600
      HealthCheckType: EC2
    CreationPolicy:
      ResourceSignal:
        Timeout: PT10M
    DependsOn: VPCGatewayAttachment
Outputs:
  User:
    Description: 'Administrator user for Jenkins.'
    Value: admin
  Password:
    Description: 'Password for Jenkins administrator user.'
    Value: !Ref JenkinsAdminPassword
